#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'status_types'
require 'beeswax_types'
require 'cli_service_types'
require 'impala_sasl_client_transport'


module Impala
  module Protocol
    module TImpalaQueryOptions
      ABORT_ON_ERROR = 0
      MAX_ERRORS = 1
      DISABLE_CODEGEN = 2
      BATCH_SIZE = 3
      MEM_LIMIT = 4
      NUM_NODES = 5
      MAX_SCAN_RANGE_LENGTH = 6
      MAX_IO_BUFFERS = 7
      NUM_SCANNER_THREADS = 8
      ALLOW_UNSUPPORTED_FORMATS = 9
      DEFAULT_ORDER_BY_LIMIT = 10
      DEBUG_ACTION = 11
      ABORT_ON_DEFAULT_LIMIT_EXCEEDED = 12
      PARQUET_COMPRESSION_CODEC = 13
      HBASE_CACHING = 14
      HBASE_CACHE_BLOCKS = 15
      VALUE_MAP = {0 => "ABORT_ON_ERROR", 1 => "MAX_ERRORS", 2 => "DISABLE_CODEGEN", 3 => "BATCH_SIZE", 4 => "MEM_LIMIT", 5 => "NUM_NODES", 6 => "MAX_SCAN_RANGE_LENGTH", 7 => "MAX_IO_BUFFERS", 8 => "NUM_SCANNER_THREADS", 9 => "ALLOW_UNSUPPORTED_FORMATS", 10 => "DEFAULT_ORDER_BY_LIMIT", 11 => "DEBUG_ACTION", 12 => "ABORT_ON_DEFAULT_LIMIT_EXCEEDED", 13 => "PARQUET_COMPRESSION_CODEC", 14 => "HBASE_CACHING", 15 => "HBASE_CACHE_BLOCKS"}
      VALID_VALUES = Set.new([ABORT_ON_ERROR, MAX_ERRORS, DISABLE_CODEGEN, BATCH_SIZE, MEM_LIMIT, NUM_NODES, MAX_SCAN_RANGE_LENGTH, MAX_IO_BUFFERS, NUM_SCANNER_THREADS, ALLOW_UNSUPPORTED_FORMATS, DEFAULT_ORDER_BY_LIMIT, DEBUG_ACTION, ABORT_ON_DEFAULT_LIMIT_EXCEEDED, PARQUET_COMPRESSION_CODEC, HBASE_CACHING, HBASE_CACHE_BLOCKS]).freeze
    end

    class TInsertResult
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ROWS_APPENDED = 1

      FIELDS = {
        ROWS_APPENDED => {:type => ::Thrift::Types::MAP, :name => 'rows_appended', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::I64}}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field rows_appended is unset!') unless @rows_appended
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TPingImpalaServiceResp
      include ::Thrift::Struct, ::Thrift::Struct_Union
      VERSION = 1

      FIELDS = {
        VERSION => {:type => ::Thrift::Types::STRING, :name => 'version'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TResetTableReq
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DB_NAME = 1
      TABLE_NAME = 2

      FIELDS = {
        DB_NAME => {:type => ::Thrift::Types::STRING, :name => 'db_name'},
        TABLE_NAME => {:type => ::Thrift::Types::STRING, :name => 'table_name'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field db_name is unset!') unless @db_name
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field table_name is unset!') unless @table_name
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
